package spike.core;

class Set {

    Set: function(hashFunction) {
      this._hashFunction = hashFunction || JSON.stringify;
      this._values = {};
      this._size = 0;
    },

    add: function(value) {
      if (!this.contains(value)) {
        this._values[this._hashFunction(value)] = value;
        this._size++;
      }
    },

    remove: function(value) {
      if (this.contains(value)) {
        delete this._values[this._hashFunction(value)];
        this._size--;
      }
    },

    contains: function(value) {
      return typeof this._values[this._hashFunction(value)] !== "undefined";
    },

    size: function() {
      return this._size;
    },

    each: function(iteratorFunction, thisObj) {
      for (var value in this._values) {
        iteratorFunction.call(thisObj, this._values[value]);
      }
    },

    print: function(){
      console.log(this._values);
    }

}
